@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } 
  @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin opacity($opacity) {
  filter: unquote("progid:DXImageTransform.Microsoft.Alpha(Opacity=#{round($opacity * 100)})");
  opacity: $opacity;
}

@mixin hide-text {
  $approximate_em_value: 12px / 1em;
  $wider_than_any_screen: -9999em;
  text-indent: $wider_than_any_screen * $approximate_em_value;
  overflow: hidden;
  text-align: left; 
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
       -o-border-radius: $radius;
          border-radius: $radius;
}

@mixin svg-image-with-fallback($class-name:"",$image-name:"",$image-width:0,$image-height:0) {
  .svg {
    #{$class-name} {
      background: {
        image: url('../img/#{$image-name}.svg');
        repeat: no-repeat;
        position: top left;
      };
      background-size:100% 100%;
      @include hide-text;
    }
  }

  .no-svg {
    #{$class-name} {
      background: {
        image: url('../img/#{$image-name}.png');
        repeat: no-repeat;
        position: top left;
      };
      background-size:100% 100%;
      @include hide-text;
    }
  }

  .lt-ie9.no-svg {
    #{$class-name} {
      background:none;
      filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='/wp-content/themes/mykrobe/img/#{$image-name}.png',sizingMethod='scale');
      -ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='/wp-content/themes/mykrobe/img/#{$image-name}.png',sizingMethod='scale')";
    }
  }

  #{$class-name} {
    width:#{$image-width};
    height:#{$image-height};
  }
}

/*
_behavior: expression( 
              this.src = this.src ? this.src : this.currentStyle.backgroundImage.split('"')[1],
              this.style.background = "none",
              this.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src=" + this.src + ")");
*/