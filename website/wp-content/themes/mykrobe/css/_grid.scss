$total-columns: 10;
$column-width: 100;
$gutter-width: 10;
$margin-left-width: 10;
$margin-right-width: 10;
$sidebar-space: false;
$use-percentages: false;

@mixin with-grid-settings(
  $total-columns_: $total-columns,
  $column-width_: $column-width,
  $gutter-width_: $gutter-width,
  $margin-left-width_: $margin-left-width,
  $margin-right-width_: $margin-right-width,
  $sidebar-space_: $sidebar-space,
  $use-percentages_: $use-percentages
) {
  // keep the defaults around
  $_total-columns: $total-columns;
  $_column-width: $column-width;
  $_gutter-width: $gutter-width;
  $_margin-left-width: $margin-left-width;
  $_margin-right-width: $margin-right-width;
  $_sidebar-space: $sidebar-space;
  $_use-percentages: $use-percentages;

  // use the new settings
  $total-columns: $total-columns_;
  $column-width: $column-width_;
  $gutter-width: $gutter-width_;
  $margin-left-width: $margin-left-width_;
  $margin-right-width: $margin-right-width_;
  $sidebar-space: $sidebar-space_;
  $use-percentages: $use-percentages_;

  // apply to contents
  @content;

  // re-instate the defaults
  $total-columns: $_total-columns;
  $column-width: $_column-width;
  $gutter-width: $_gutter-width;
  $margin-left-width: $_margin-left-width;
  $margin-right-width: $_margin-right-width;
  $sidebar-space: $_sidebar-space;
  $use-percentages: $_use-percentages;
}

@mixin with-interim-columns-margins($total-columns_: $total-columns, $margin-left-width_: $margin-left-width, $margin-right-width_: $margin-right-width) {
  $_total-columns: $total-columns;
  $_margin-left-width: $margin-left-width;
  $_margin-right-width: $margin-right-width;

  $total-columns: $total-columns_;
  $margin-left-width: $margin-left-width_;
  $margin-right-width: $margin-right-width_;
  @content;

  $total-columns: $_total-columns;
  $margin-left-width: $_margin-left-width;
  $margin-right-width: $_margin-right-width;
}

@mixin with-use-percentages($use-percentages_:true) {
  $_use-percentages: $use-percentages;
  $use-percentages: $use-percentages_;
  @content;
  $use-percentages: $_use-percentages;
}

//
// combined width required for supplied settings
//

@function width-with-grid-settings( $columns, $width, $gutter, $margin ) {
  $_container-width:($columns * ($width + $gutter)) - $gutter;
  @return $_container-width + (2 * $margin);
}

//
// total width for current settings
//

@function width-total() {
  $_container-width:($total-columns * ($column-width + $gutter-width)) - $gutter-width;
  @return $_container-width + $margin-left-width + $margin-right-width;
}
 
@function width-for-columns-gutters-margins($columns:1, $gutters:0, $include-margin-left: true, $include-margin-right: true) {
  $_width-total:width-total();
  $_container-width:($columns * $column-width) + ($gutters * $gutter-width);
  @if $include-margin-left {
    $_container-width: $_container-width + $margin-left-width;
  }
  @if $include-margin-right {
    $_container-width: $_container-width + $margin-right-width;
  }
  @if $use-percentages {
    @return 100% * $_container-width / $_width-total;
  }
  @return $_container-width;
}

@function margin-left() {
  @return width-for-columns-gutters-margins(0,0,true,false);
}

@function margin-right() {
  @return width-for-columns-gutters-margins(0,0,false,true);
}

@function gutter() {
  @return width-for-columns-gutters-margins(0,1,false,false);
}

@function width-for-columns-gutters($columns:1, $gutters:1) {
  @return width-for-columns-gutters-margins($columns,$gutters,false,false);
}

@mixin base-column {
  float:left;
  min-height: 1px;
  margin-right: gutter();
}

@mixin base-column-container {
  overflow: hidden;
}

@mixin base-grid {
  .sidebar {
    width: width-for-columns-gutters(2,1);
    @if $sidebar-space {
      left: margin-left();
    }    
  }
  .navbar-content {
    // adjustments to align icons visually with grid
    margin-left:-11px;
    margin-right:-11px;
  }
  .navbar {
    .navbar-content {
      padding-left: margin-left();
      padding-right: margin-right();
    }
    .navbar-rule {
      left:margin-left();
      right:margin-right();
    }
  }
  .map {
    .leaflet-popup-content {
      // img {
        // @include with-use-percentages(false) {
        //   width:width-for-columns-gutters-margins(2,1);
        // }
        // max-width:none;
      // }
    }
  }
  .content {
    overflow: hidden;
    @if $sidebar-space {
      margin-left: width-for-columns-gutters-margins(2,2,true,false);
      width: width-for-columns-gutters-margins($total-columns - 2, $total-columns - 3, false, true);
      @include with-use-percentages(false) {
        min-width: width-for-columns-gutters-margins($total-columns - 2, $total-columns - 3, false, true);
      }
    }
    @else {
      margin-left: margin-left();
      width: width-for-columns-gutters-margins($total-columns, $total-columns - 1, false, true);
      padding: 0;
      @include with-use-percentages(false) {
        min-width: width-for-columns-gutters-margins($total-columns, $total-columns - 1, false, true);
      }
    }
    padding-bottom: pixels-to-ems(24,13);
    .promo {
      @include base-column-container();
      $_promo-columns: $total-columns;
      @if $sidebar-space {
        $_promo-columns:$total-columns - 2;
      }
      // calculate width based on the right-hand portion of browser including right margin
      @include with-interim-columns-margins($_promo-columns, 0, $margin-right-width) {
        width: width-for-columns-gutters($_promo-columns, $_promo-columns - 1);
      }
      // not including right margin
      @include with-interim-columns-margins($_promo-columns, 0, 0) {
        .promo-title {
          @include base-column();
          width:width-for-columns-gutters(2,1);
        }
        .promo-content {
          @include base-column();
          margin-right:0;
          overflow: hidden;
          width: width-for-columns-gutters($_promo-columns - 2, $_promo-columns - 3);
          @include with-interim-columns-margins($_promo-columns - 2, 0, 0) {
            .promo-content-column {
              @include base-column();
              width: width-for-columns-gutters(2,1);
              &.last {
                margin-right:0;
              }
            }
          }
        }
      }
    }
    // gallery overlaps by gutter so that contents can flow (ie8)
    // it's clipped by overflow:hidden on .content
    
    .gallery {
      @include base-column-container();
      $_gallery-columns: $total-columns;
      @if $sidebar-space {
        $_gallery-columns:$total-columns - 2;
      }
      // calculate width based on the right-hand portion of browser including right margin
      // allowing .gallery-item to wrap without :nth-child selectors
      @include with-interim-columns-margins($_gallery-columns, 0, $margin-right-width) {
        width: width-for-columns-gutters-margins($_gallery-columns, $_gallery-columns - 1, false, true);
        .gallery-item {
          @include base-column();
          width: width-for-columns-gutters(2, 1);
          margin:0 gutter() gutter() 0;
        }
      }
    }
    .list {
      $_list-columns: $total-columns;
      @if $sidebar-space {
        $_list-columns:$total-columns - 2;
      }
      // calculate width based on the right-hand portion of browser including right margin
      @include with-interim-columns-margins($_list-columns, 0, $margin-right-width) {
        width: width-for-columns-gutters($_list-columns, $_list-columns - 1);
      }
      td {
        padding-right: gutter();
        &.list-architect {
          padding-right: 0;
        }
      }
    }
    .project {
      @include base-column-container();
      $_project-columns: $total-columns;
      @if $sidebar-space {
        $_project-columns:$total-columns - 2;
      }
      // calculate width based on the right-hand portion of browser including right margin
      @include with-interim-columns-margins($_project-columns, 0, $margin-right-width) {
        width: width-for-columns-gutters($_project-columns, $_project-columns - 1);
      }

      @if $use-percentages {
        // allow image to flex fit width
      }
      @else {
        // constrain image to max height ratio of 2:3
        .project-image {
          @include with-use-percentages(false) {
            $image-width-pixels: width-for-columns-gutters($_project-columns, $_project-columns - 1);
            // width:$image-width-pixels;
            img {
              max-height:$image-width-pixels * 2 / 3;
            }
          }
        }
      }
    
      .project-details {
        @include base-column-container();
        @include with-interim-columns-margins($_project-columns, 0, 0) {
          width: width-for-columns-gutters($_project-columns, $_project-columns - 1);

          .project-details-name {
            @include base-column();
            width: width-for-columns-gutters(2,1);
          }
          .project-details-content {
            @include base-column-container();
            @include with-interim-columns-margins($_project-columns - 2, 0, 0) {
              .project-details-description {
                @include base-column();
                width: width-for-columns-gutters(4,3);
                p {
                  // @include font-size(16,20,13);
                  padding-bottom:pixels-to-ems(15,13);
                }
              }
              .project-details-details {
                @include base-column();
                width: width-for-columns-gutters(2,1);
                margin-right: 0;
              }
            }
          }
        }
      }
    }
  }
}


